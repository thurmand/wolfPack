{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.ad085a96f8ee95f65cf7.hot-update.js","sources":["webpack:///./src/components/range-calculator/index.js"],"sourcesContent":["import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport { createComponentWithProxy } from \"react-fela\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\n\r\nclass RangeCalculator extends React.Component {\r\n  getCentiradians = event => {\r\n    let value = event.target.value;\r\n    if (value >= 0 && value <= 50) {\r\n      this.props.getCentiradians(value);\r\n      this.calculateHectoMeters(this.props);\r\n    }\r\n  };\r\n\r\n  handleZoomSwitch = event => {\r\n    this.props.handleZoomSwitch(event.target.checked);\r\n    this.calculateHectoMeters(this.props);\r\n  };\r\n\r\n  calculateHectoMeters = props => {\r\n    let { isZoomed } = props.rangeDetails;\r\n    let mastHeight = props.mastHeight;\r\n    let centiradians = Number(props.rangeDetails.centiradians);\r\n\r\n    if (mastHeight > 0 && centiradians > 0) {\r\n      let zoomedMulti = isZoomed ? 4 : 1;\r\n      let hectoMeters = ((mastHeight / centiradians) * zoomedMulti).toFixed(1);\r\n      this.props.getHectoMeters(hectoMeters);\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let {\r\n      isZoomed,\r\n      mastHeight,\r\n      centiradians,\r\n      hectoMeters\r\n    } = this.props.rangeDetails;\r\n    console.log(mastHeight);\r\n    return (\r\n      <Container>\r\n        <Typography variant=\"subtitle1\">Range</Typography>\r\n        <PaddedTextField\r\n          id=\"centiradians\"\r\n          label=\"Centiradians\"\r\n          margin=\"normal\"\r\n          type=\"number\"\r\n          value={centiradians}\r\n          onChange={()=>this.getCentiradians}\r\n          autoComplete=\"off\"\r\n        />\r\n        <FormControlLabel\r\n          control={\r\n            <Switch onChange={this.handleZoomSwitch} checked={isZoomed} />\r\n          }\r\n          label=\"Zoomed In\"\r\n        />\r\n        <Typography variant=\"subtitle1\">Output</Typography>\r\n        <PaddedTextField\r\n          variant=\"outlined\"\r\n          label=\"Hectometers\"\r\n          value={hectoMeters}\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n        />\r\n        <PaddedTextField\r\n          variant=\"outlined\"\r\n          label=\"Meters\"\r\n          value={(hectoMeters * 100).toFixed(1)}\r\n          InputProps={{\r\n            readOnly: true\r\n          }}\r\n        />\r\n        {/* <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={this.props.resetShipRange}\r\n        >\r\n          reset\r\n        </Button> */}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst PaddedTextField = createComponentWithProxy(\r\n  () => ({\r\n    margin: \"4px\"\r\n  }),\r\n  TextField\r\n);\r\n\r\nconst Container = createComponentWithProxy(() => ({\r\n  height: \"100%\"\r\n}));\r\n\r\nexport default RangeCalculator;\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;;;;;;AACA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AADA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AACA;AACA;AADA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBA;;;;AA9EA;AACA;AAgFA;AACA;AACA;AADA;AAAA;AAMA;AAAA;AACA;AADA;AAAA;AAIA;;;;A","sourceRoot":""}